{"remainingRequest":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\src\\components\\Commons\\DateTimePicker\\TimePicker.vue?vue&type=script&lang=ts&","dependencies":[{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\src\\components\\Commons\\DateTimePicker\\TimePicker.vue","mtime":1606271908138},{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606271892512},{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\babel-loader\\lib\\index.js","mtime":1606271892289},{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\ts-loader\\index.js","mtime":1606271904472},{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606271892512},{"path":"E:\\Document\\Kì 1 năm 4\\CNLTTH\\Project_QLKS\\BTL_CNLTTH_T5\\QuanLyKhachSanCli\\node_modules\\vue-loader\\lib\\index.js","mtime":1606271905940}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from 'vue-property-decorator';\nexport default Vue.extend({\n    components: {},\n    props: {\n        value: {\n            type: [String, Date],\n            default: null\n        },\n        max: {\n            type: [String, Date],\n            default: null\n        },\n        min: {\n            type: [String, Date],\n            default: null\n        },\n        clearable: {\n            type: Boolean,\n            default: false\n        },\n        formatInput: {\n            type: String,\n            default: 'hh:mm'\n        },\n        errorMessages: {\n            default: null\n        },\n        appendIcon: {\n            type: String,\n            default: null\n        },\n        prependIcon: {\n            type: String,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        hideDetails: {\n            type: Boolean,\n            default: false\n        },\n        label: {\n            type: String,\n            default: ''\n        },\n    },\n    data() {\n        return {\n            menu: false,\n            time: '',\n            valueMax: undefined,\n            valueMin: undefined\n        }\n    },\n    computed: {\n    },\n    watch: {\n        time(val, oldVal) {\n            this.$emit('input', val);\n        }\n    },\n    created() {\n        if (this.value != null && this.value != undefined) {\n            this.time = this.$moment(this.value, this.formatInput).format(\"k:mm\");\n        }\n        if (this.max != null) {\n            this.valueMax = this.$moment(this.max, this.formatInput).format(\"k:mm\");\n        }\n        if (this.min != null) {\n            this.valueMin = this.$moment(this.min, this.formatInput).format(\"k:mm\");\n        }\n    },\n    methods: {\n        input(val: any) {\n            this.$emit('input', val);\n        }\n    }\n});\n",{"version":3,"sources":["TimePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TimePicker.vue","sourceRoot":"src\\components\\Commons\\DateTimePicker","sourcesContent":["<template>\r\n    <v-menu ref=\"menu\"\r\n            :close-on-content-click=\"false\"\r\n            v-model=\"menu\"\r\n            :nudge-right=\"40\"\r\n            :return-value.sync=\"time\"\r\n            lazy\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            full-width\r\n            max-width=\"290px\"\r\n            min-width=\"290px\"\r\n            :disabled=\"disabled\">\r\n        <v-text-field slot=\"activator\"\r\n                      v-model=\"time\"\r\n                      :label=\"label\"\r\n                      :append-icon=\"appendIcon\"\r\n                      :prepend-icon=\"prependIcon\"\r\n                      readonly\r\n                      :clearable=\"clearable\"\r\n                      @input=\"input\"\r\n                      :error-messages=\"errorMessages\"\r\n                      :hide-details=\"hideDetails\"></v-text-field>\r\n        <v-time-picker v-if=\"menu\"\r\n                       v-model=\"time\"\r\n                       full-width\r\n                       format=\"24hr\"\r\n                      placeholder=\"Chọn giờ\"\r\n                       @change=\"$refs.menu.save(time)\"\r\n                       :min=\"valueMin\"\r\n                       :max=\"valueMax\"></v-time-picker>\r\n    </v-menu>\r\n</template>\r\n<script lang=\"ts\">\r\n    import { Vue } from 'vue-property-decorator';\r\n    export default Vue.extend({\r\n        components: {},\r\n        props: {\r\n            value: {\r\n                type: [String, Date],\r\n                default: null\r\n            },\r\n            max: {\r\n                type: [String, Date],\r\n                default: null\r\n            },\r\n            min: {\r\n                type: [String, Date],\r\n                default: null\r\n            },\r\n            clearable: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatInput: {\r\n                type: String,\r\n                default: 'hh:mm'\r\n            },\r\n            errorMessages: {\r\n                default: null\r\n            },\r\n            appendIcon: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            prependIcon: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideDetails: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                menu: false,\r\n                time: '',\r\n                valueMax: undefined,\r\n                valueMin: undefined\r\n            }\r\n        },\r\n        computed: {\r\n        },\r\n        watch: {\r\n            time(val, oldVal) {\r\n                this.$emit('input', val);\r\n            }\r\n        },\r\n        created() {\r\n            if (this.value != null && this.value != undefined) {\r\n                this.time = this.$moment(this.value, this.formatInput).format(\"k:mm\");\r\n            }\r\n            if (this.max != null) {\r\n                this.valueMax = this.$moment(this.max, this.formatInput).format(\"k:mm\");\r\n            }\r\n            if (this.min != null) {\r\n                this.valueMin = this.$moment(this.min, this.formatInput).format(\"k:mm\");\r\n            }\r\n        },\r\n        methods: {\r\n            input(val: any) {\r\n                this.$emit('input', val);\r\n            }\r\n        }\r\n    });\r\n</script>"]}]}